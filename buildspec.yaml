version: 0.2

phases:
  pre_build:
  commands:
    - cd $CODEBUILD_SRC_DIR
    - echo "Changed directory to project source: $(pwd)"
    - ls -l
    - if [ -f "pom.xml" ]; then echo "Found pom.xml"; else echo "Missing pom.xml"; fi
    - mvn clean install
    - echo "Logging in to Amazon ECR..."
    - aws --version
    - export REPOSITORY_URI=416793559122.dkr.ecr.us-east-1.amazonaws.com/javatechie-registry
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
    - export COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - export IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo "Build started on $(TZ='Asia/Kolkata' date)"
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Build completed on $(TZ='Asia/Kolkata' date)"
      - echo "Pushing the Docker images..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - DOCKER_CONTAINER_NAME=javatechie-registry
      - "printf '[{\"name\":\"%s\",\"imageUri\":\"%s\"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json"
      - echo $DOCKER_CONTAINER_NAME
      - echo "printing imagedefinitions.json"
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/course-service.jar